name: ci-python

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - ci-setup

jobs:
  build_ursa:
    name: Build Ursa
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6]
        include:
          - os: ubuntu-latest
            plat-name-simple: linux
            plat-name: manylinux2014_x86_64
            target-name: libbbs.so
          - os: macos-latest
            plat-name-simple: macos
            plat-name: macosx_10_9_x86_64 # macosx_10_9_universal2
            target-name: libbbs.dylib
          - os: windows-latest
            plat-name-simple: windows
            plat-name: win_amd64
            target-name: bbs.dll

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - run: yarn build:${{matrix.plat-name-simple}}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.plat-name-simple}}
          path: ./out/${{matrix.plat-name-simple}}/*

  test_python_wrapper:
    name: Test Python Wrapper
    needs: [build_ursa]
    runs-on: macos-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            plat-name-simple: linux
            plat-name: manylinux2014_x86_64
            target-name: libbbs.so
          - os: macos-latest
            plat-name-simple: macos
            plat-name: macosx_10_9_x86_64 # macosx_10_9_universal2
            target-name: libbbs.dylib
          - os: windows-latest
            plat-name-simple: windows
            plat-name: win_amd64
            target-name: bbs.dll
    
    runs-on: ${{ matrix.os }}
        
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: ${{matrix.plat-name-simple}}
          path: ./wrappers/python/ursa_bbs_signatures
      - name: Run tests
        run: python -m unittest discover


  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          mkdir .\out\windows
          cargo build --release
          cp .\target\release\bbs.dll .\out\windows
      - uses: actions/upload-artifact@v2
        with:
          name: windows
          path: ./out/windows/*

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: yarn build:linux
      - uses: actions/upload-artifact@v2
        with:
          name: linux
          path: ./out/linux/*

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - run: yarn build:macos
      - uses: actions/upload-artifact@v2
        with:
          name: macos
          path: ./out/macos/darwin-x86_64/*

  test_macos:
    needs: [build_macos]
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: macos
          path: ./wrappers/python/ursa_bbs_signatures
      - name: Run tests
        run: python -m unittest discover
        
  test_linux:
    needs: [build_linux]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: linux
          path: ./wrappers/python/ursa_bbs_signatures
      - name: Run tests
        run: python -m unittest discover
        
  test_windows:
    needs: [build_windows]
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: windows
          path: ./wrappers/python/ursa_bbs_signatures
      - name: Run tests
        run: python -m unittest discover


